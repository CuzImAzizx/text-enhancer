!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).Diff={})}(this,(function(e){"use strict";class n{diff(e,n,t={}){let o;"function"==typeof t?(o=t,t={}):"callback"in t&&(o=t.callback);const s=this.castInput(e,t),r=this.castInput(n,t),i=this.removeEmpty(this.tokenize(s,t)),l=this.removeEmpty(this.tokenize(r,t));return this.diffWithOptionsObj(i,l,t,o)}diffWithOptionsObj(e,n,t,o){var s;const r=e=>(e=this.postProcess(e,t),o?void setTimeout((function(){o(e)}),0):e),i=n.length,l=e.length;let u=1,a=i+l;null!=t.maxEditLength&&(a=Math.min(a,t.maxEditLength));const c=null!==(s=t.timeout)&&void 0!==s?s:1/0,f=Date.now()+c,h=[{oldPos:-1,lastComponent:void 0}];let d=this.extractCommon(h[0],n,e,0,t);if(h[0].oldPos+1>=l&&d+1>=i)return r(this.buildValues(h[0].lastComponent,n,e));let p=-1/0,g=1/0;const m=()=>{for(let o=Math.max(p,-u);o<=Math.min(g,u);o+=2){let s;const u=h[o-1],a=h[o+1];u&&(h[o-1]=void 0);let c=!1;if(a){const e=a.oldPos-o;c=a&&0<=e&&e<i}const f=u&&u.oldPos+1<l;if(c||f){if(s=!f||c&&u.oldPos<a.oldPos?this.addToPath(a,!0,!1,0,t):this.addToPath(u,!1,!0,1,t),d=this.extractCommon(s,n,e,o,t),s.oldPos+1>=l&&d+1>=i)return r(this.buildValues(s.lastComponent,n,e))||!0;h[o]=s,s.oldPos+1>=l&&(g=Math.min(g,o-1)),d+1>=i&&(p=Math.max(p,o+1))}else h[o]=void 0}u++};if(o)!function e(){setTimeout((function(){if(u>a||Date.now()>f)return o(void 0);m()||e()}),0)}();else for(;u<=a&&Date.now()<=f;){const e=m();if(e)return e}}addToPath(e,n,t,o,s){const r=e.lastComponent;return r&&!s.oneChangePerToken&&r.added===n&&r.removed===t?{oldPos:e.oldPos+o,lastComponent:{count:r.count+1,added:n,removed:t,previousComponent:r.previousComponent}}:{oldPos:e.oldPos+o,lastComponent:{count:1,added:n,removed:t,previousComponent:r}}}extractCommon(e,n,t,o,s){const r=n.length,i=t.length;let l=e.oldPos,u=l-o,a=0;for(;u+1<r&&l+1<i&&this.equals(t[l+1],n[u+1],s);)u++,l++,a++,s.oneChangePerToken&&(e.lastComponent={count:1,previousComponent:e.lastComponent,added:!1,removed:!1});return a&&!s.oneChangePerToken&&(e.lastComponent={count:a,previousComponent:e.lastComponent,added:!1,removed:!1}),e.oldPos=l,u}equals(e,n,t){return t.comparator?t.comparator(e,n):e===n||!!t.ignoreCase&&e.toLowerCase()===n.toLowerCase()}removeEmpty(e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(e[t]);return n}castInput(e,n){return e}tokenize(e,n){return Array.from(e)}join(e){return e.join("")}postProcess(e,n){return e}get useLongestToken(){return!1}buildValues(e,n,t){const o=[];let s;for(;e;)o.push(e),s=e.previousComponent,delete e.previousComponent,e=s;o.reverse();const r=o.length;let i=0,l=0,u=0;for(;i<r;i++){const e=o[i];if(e.removed)e.value=this.join(t.slice(u,u+e.count)),u+=e.count;else{if(!e.added&&this.useLongestToken){let o=n.slice(l,l+e.count);o=o.map((function(e,n){const o=t[u+n];return o.length>e.length?o:e})),e.value=this.join(o)}else e.value=this.join(n.slice(l,l+e.count));l+=e.count,e.added||(u+=e.count)}}return o}}const t=new class extends n{};function o(e,n){let t;for(t=0;t<e.length&&t<n.length;t++)if(e[t]!=n[t])return e.slice(0,t);return e.slice(0,t)}function s(e,n){let t;if(!e||!n||e[e.length-1]!=n[n.length-1])return"";for(t=0;t<e.length&&t<n.length;t++)if(e[e.length-(t+1)]!=n[n.length-(t+1)])return e.slice(-t);return e.slice(-t)}function r(e,n,t){if(e.slice(0,n.length)!=n)throw Error(`string ${JSON.stringify(e)} doesn't start with prefix ${JSON.stringify(n)}; this is a bug`);return t+e.slice(n.length)}function i(e,n,t){if(!n)return e+t;if(e.slice(-n.length)!=n)throw Error(`string ${JSON.stringify(e)} doesn't end with suffix ${JSON.stringify(n)}; this is a bug`);return e.slice(0,-n.length)+t}function l(e,n){return r(e,n,"")}function u(e,n){return i(e,n,"")}function a(e,n){return n.slice(0,function(e,n){let t=0;e.length>n.length&&(t=e.length-n.length);let o=n.length;e.length<n.length&&(o=e.length);const s=Array(o);let r=0;s[0]=0;for(let e=1;e<o;e++){for(n[e]==n[r]?s[e]=s[r]:s[e]=r;r>0&&n[e]!=n[r];)r=s[r];n[e]==n[r]&&r++}r=0;for(let o=t;o<e.length;o++){for(;r>0&&e[o]!=n[r];)r=s[r];e[o]==n[r]&&r++}return r}(e,n))}function c(e){let n;for(n=e.length-1;n>=0&&e[n].match(/\s/);n--);return e.substring(n+1)}function f(e){const n=e.match(/^\s*/);return n?n[0]:""}const h="a-zA-Z0-9_\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}",d=new RegExp(`[${h}]+|\\s+|[^${h}]`,"ug");const p=new class extends n{equals(e,n,t){return t.ignoreCase&&(e=e.toLowerCase(),n=n.toLowerCase()),e.trim()===n.trim()}tokenize(e,n={}){let t;if(n.intlSegmenter){const o=n.intlSegmenter;if("word"!=o.resolvedOptions().granularity)throw new Error('The segmenter passed must have a granularity of "word"');t=Array.from(o.segment(e),(e=>e.segment))}else t=e.match(d)||[];const o=[];let s=null;return t.forEach((e=>{/\s/.test(e)?null==s?o.push(e):o.push(o.pop()+e):null!=s&&/\s/.test(s)?o[o.length-1]==s?o.push(o.pop()+e):o.push(s+e):o.push(e),s=e})),o}join(e){return e.map(((e,n)=>0==n?e:e.replace(/^\s+/,""))).join("")}postProcess(e,n){if(!e||n.oneChangePerToken)return e;let t=null,o=null,s=null;return e.forEach((e=>{e.added?o=e:e.removed?s=e:((o||s)&&g(t,s,o,e),t=e,o=null,s=null)})),(o||s)&&g(t,s,o,null),e}};function g(e,n,t,h){if(n&&t){const a=f(n.value),d=c(n.value),p=f(t.value),g=c(t.value);if(e){const s=o(a,p);e.value=i(e.value,p,s),n.value=l(n.value,s),t.value=l(t.value,s)}if(h){const e=s(d,g);h.value=r(h.value,g,e),n.value=u(n.value,e),t.value=u(t.value,e)}}else if(t){if(e){const e=f(t.value);t.value=t.value.substring(e.length)}if(h){const e=f(h.value);h.value=h.value.substring(e.length)}}else if(e&&h){const t=f(h.value),a=f(n.value),d=c(n.value),p=o(t,a);n.value=l(n.value,p);const g=s(l(t,p),d);n.value=u(n.value,g),h.value=r(h.value,t,g),e.value=i(e.value,t,t.slice(0,t.length-g.length))}else if(h){const e=f(h.value),t=a(c(n.value),e);n.value=u(n.value,t)}else if(e){const t=a(c(e.value),f(n.value));n.value=l(n.value,t)}}const m=new class extends n{tokenize(e){const n=new RegExp(`(\\r?\\n)|[${h}]+|[^\\S\\n\\r]+|[^${h}]`,"ug");return e.match(n)||[]}};function v(e,n,t){return m.diff(e,n,t)}const w=new class extends n{constructor(){super(...arguments),this.tokenize=k}equals(e,n,t){return t.ignoreWhitespace?(t.newlineIsToken&&e.includes("\n")||(e=e.trim()),t.newlineIsToken&&n.includes("\n")||(n=n.trim())):t.ignoreNewlineAtEof&&!t.newlineIsToken&&(e.endsWith("\n")&&(e=e.slice(0,-1)),n.endsWith("\n")&&(n=n.slice(0,-1))),super.equals(e,n,t)}};function y(e,n,t){return w.diff(e,n,t)}function k(e,n){n.stripTrailingCr&&(e=e.replace(/\r\n/g,"\n"));const t=[],o=e.split(/(\n|\r\n)/);o[o.length-1]||o.pop();for(let e=0;e<o.length;e++){const s=o[e];e%2&&!n.newlineIsToken?t[t.length-1]+=s:t.push(s)}return t}const b=new class extends n{tokenize(e){var n;const t=[];let o=0;for(let r=0;r<e.length;r++){if(r==e.length-1){t.push(e.slice(o));break}if(("."==(s=e[r])||"!"==s||"?"==s)&&e[r+1].match(/\s/)){for(t.push(e.slice(o,r+1)),r=o=r+1;null===(n=e[r+1])||void 0===n?void 0:n.match(/\s/);)r++;t.push(e.slice(o,r+1)),o=r+1}}var s;return t}};const L=new class extends n{tokenize(e){return e.split(/([{}:;,]|\s+)/)}};const C=new class extends n{constructor(){super(...arguments),this.tokenize=k}get useLongestToken(){return!0}castInput(e,n){const{undefinedReplacement:t,stringifyReplacer:o=((e,n)=>void 0===n?t:n)}=n;return"string"==typeof e?e:JSON.stringify(P(e,null,null,o),null,"  ")}equals(e,n,t){return super.equals(e.replace(/,([\r\n])/g,"$1"),n.replace(/,([\r\n])/g,"$1"),t)}};function P(e,n,t,o,s){let r,i;for(n=n||[],t=t||[],o&&(e=o(void 0===s?"":s,e)),r=0;r<n.length;r+=1)if(n[r]===e)return t[r];if("[object Array]"===Object.prototype.toString.call(e)){for(n.push(e),i=new Array(e.length),t.push(i),r=0;r<e.length;r+=1)i[r]=P(e[r],n,t,o,String(r));return n.pop(),t.pop(),i}if(e&&e.toJSON&&(e=e.toJSON()),"object"==typeof e&&null!==e){n.push(e),i={},t.push(i);const s=[];let l;for(l in e)Object.prototype.hasOwnProperty.call(e,l)&&s.push(l);for(s.sort(),r=0;r<s.length;r+=1)l=s[r],i[l]=P(e[l],n,t,o,l);n.pop(),t.pop()}else i=e;return i}const j=new class extends n{tokenize(e){return e.slice()}join(e){return e}removeEmpty(e){return e}};function O(e){return Array.isArray(e)?e.map((e=>O(e))):Object.assign(Object.assign({},e),{hunks:e.hunks.map((e=>Object.assign(Object.assign({},e),{lines:e.lines.map(((n,t)=>{var o;return n.startsWith("\\")||n.endsWith("\r")||(null===(o=e.lines[t+1])||void 0===o?void 0:o.startsWith("\\"))?n:n+"\r"}))})))})}function S(e){return Array.isArray(e)?e.map((e=>S(e))):Object.assign(Object.assign({},e),{hunks:e.hunks.map((e=>Object.assign(Object.assign({},e),{lines:e.lines.map((e=>e.endsWith("\r")?e.substring(0,e.length-1):e))})))})}function x(e){const n=e.split(/\n/),t=[];let o=0;function s(){const e={};for(t.push(e);o<n.length;){const t=n[o];if(/^(---|\+\+\+|@@)\s/.test(t))break;const s=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(t);s&&(e.index=s[1]),o++}for(r(e),r(e),e.hunks=[];o<n.length;){const t=n[o];if(/^(Index:\s|diff\s|---\s|\+\+\+\s|===================================================================)/.test(t))break;if(/^@@/.test(t))e.hunks.push(i());else{if(t)throw new Error("Unknown line "+(o+1)+" "+JSON.stringify(t));o++}}}function r(e){const t=/^(---|\+\+\+)\s+(.*)\r?$/.exec(n[o]);if(t){const n=t[2].split("\t",2),s=(n[1]||"").trim();let r=n[0].replace(/\\\\/g,"\\");/^".*"$/.test(r)&&(r=r.substr(1,r.length-2)),"---"===t[1]?(e.oldFileName=r,e.oldHeader=s):(e.newFileName=r,e.newHeader=s),o++}}function i(){var e;const t=o,s=n[o++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),r={oldStart:+s[1],oldLines:void 0===s[2]?1:+s[2],newStart:+s[3],newLines:void 0===s[4]?1:+s[4],lines:[]};0===r.oldLines&&(r.oldStart+=1),0===r.newLines&&(r.newStart+=1);let i=0,l=0;for(;o<n.length&&(l<r.oldLines||i<r.newLines||(null===(e=n[o])||void 0===e?void 0:e.startsWith("\\")));o++){const e=0==n[o].length&&o!=n.length-1?" ":n[o][0];if("+"!==e&&"-"!==e&&" "!==e&&"\\"!==e)throw new Error(`Hunk at line ${t+1} contained invalid line ${n[o]}`);r.lines.push(n[o]),"+"===e?i++:"-"===e?l++:" "===e&&(i++,l++)}if(i||1!==r.newLines||(r.newLines=0),l||1!==r.oldLines||(r.oldLines=0),i!==r.newLines)throw new Error("Added line count did not match for hunk at line "+(t+1));if(l!==r.oldLines)throw new Error("Removed line count did not match for hunk at line "+(t+1));return r}for(;o<n.length;)s();return t}function W(e,n,t){let o=!0,s=!1,r=!1,i=1;return function l(){if(o&&!r){if(s?i++:o=!1,e+i<=t)return e+i;r=!0}if(!s)return r||(o=!0),n<=e-i?e-i++:(s=!0,l())}}function E(e,n,t={}){let o;if(o="string"==typeof n?x(n):Array.isArray(n)?n:[n],o.length>1)throw new Error("applyPatch only works with a single input.");return function(e,n,t={}){(t.autoConvertLineEndings||null==t.autoConvertLineEndings)&&((o=e).includes("\r\n")&&!o.startsWith("\n")&&!o.match(/[^\r]\n/)&&function(e){return Array.isArray(e)||(e=[e]),!e.some((e=>e.hunks.some((e=>e.lines.some((e=>!e.startsWith("\\")&&e.endsWith("\r")))))))}(n)?n=O(n):function(e){return!e.includes("\r\n")&&e.includes("\n")}(e)&&function(e){return Array.isArray(e)||(e=[e]),e.some((e=>e.hunks.some((e=>e.lines.some((e=>e.endsWith("\r")))))))&&e.every((e=>e.hunks.every((e=>e.lines.every(((n,t)=>{var o;return n.startsWith("\\")||n.endsWith("\r")||(null===(o=e.lines[t+1])||void 0===o?void 0:o.startsWith("\\"))}))))))}(n)&&(n=S(n)));var o;const s=e.split("\n"),r=n.hunks,i=t.compareLine||((e,n,t,o)=>n===o),l=t.fuzzFactor||0;let u=0;if(l<0||!Number.isInteger(l))throw new Error("fuzzFactor must be a non-negative integer");if(!r.length)return e;let a="",c=!1,f=!1;for(let e=0;e<r[r.length-1].lines.length;e++){const n=r[r.length-1].lines[e];"\\"==n[0]&&("+"==a[0]?c=!0:"-"==a[0]&&(f=!0)),a=n}if(c){if(f){if(!l&&""==s[s.length-1])return!1}else if(""==s[s.length-1])s.pop();else if(!l)return!1}else if(f)if(""!=s[s.length-1])s.push("");else if(!l)return!1;function h(e,n,t,o=0,r=!0,l=[],u=0){let a=0,c=!1;for(;o<e.length;o++){const f=e[o],d=f.length>0?f[0]:" ",p=f.length>0?f.substr(1):f;if("-"===d){if(!i(n+1,s[n],d,p))return t&&null!=s[n]?(l[u]=s[n],h(e,n+1,t-1,o,!1,l,u+1)):null;n++,a=0}if("+"===d){if(!r)return null;l[u]=p,u++,a=0,c=!0}if(" "===d){if(a++,l[u]=s[n],!i(n+1,s[n],d,p))return c||!t?null:s[n]&&(h(e,n+1,t-1,o+1,!1,l,u+1)||h(e,n+1,t-1,o,!1,l,u+1))||h(e,n,t-1,o+1,!1,l,u);u++,r=!0,c=!1,n++}}return u-=a,n-=a,l.length=u,{patchedLines:l,oldLineLastI:n-1}}const d=[];let p=0;for(let e=0;e<r.length;e++){const n=r[e];let t;const o=s.length-n.oldLines+l;let i;for(let e=0;e<=l;e++){i=n.oldStart+p-1;const s=W(i,u,o);for(;void 0!==i&&(t=h(n.lines,i,e),!t);i=s());if(t)break}if(!t)return!1;for(let e=u;e<i;e++)d.push(s[e]);for(let e=0;e<t.patchedLines.length;e++){const n=t.patchedLines[e];d.push(n)}u=t.oldLineLastI+1,p=i+1-n.oldStart}for(let e=u;e<s.length;e++)d.push(s[e]);return d.join("\n")}(e,o[0],t)}function T(e,n,t,o,s,r,i){let l;l=i?"function"==typeof i?{callback:i}:i:{},void 0===l.context&&(l.context=4);const u=l.context;if(l.newlineIsToken)throw new Error("newlineIsToken may not be used with patch-generation functions, only with diffing functions");if(!l.callback)return a(y(t,o,l));{const{callback:e}=l;y(t,o,Object.assign(Object.assign({},l),{callback:n=>{const t=a(n);e(t)}}))}function a(t){if(!t)return;function o(e){return e.map((function(e){return" "+e}))}t.push({value:"",lines:[]});const i=[];let l=0,a=0,c=[],f=1,h=1;for(let e=0;e<t.length;e++){const n=t[e],s=n.lines||A(n.value);if(n.lines=s,n.added||n.removed){if(!l){const n=t[e-1];l=f,a=h,n&&(c=u>0?o(n.lines.slice(-u)):[],l-=c.length,a-=c.length)}for(const e of s)c.push((n.added?"+":"-")+e);n.added?h+=s.length:f+=s.length}else{if(l)if(s.length<=2*u&&e<t.length-2)for(const e of o(s))c.push(e);else{const e=Math.min(s.length,u);for(const n of o(s.slice(0,e)))c.push(n);const n={oldStart:l,oldLines:f-l+e,newStart:a,newLines:h-a+e,lines:c};i.push(n),l=0,a=0,c=[]}f+=s.length,h+=s.length}}for(const e of i)for(let n=0;n<e.lines.length;n++)e.lines[n].endsWith("\n")?e.lines[n]=e.lines[n].slice(0,-1):(e.lines.splice(n+1,0,"\\ No newline at end of file"),n++);return{oldFileName:e,newFileName:n,oldHeader:s,newHeader:r,hunks:i}}}function F(e){if(Array.isArray(e))return e.map(F).join("\n");const n=[];e.oldFileName==e.newFileName&&n.push("Index: "+e.oldFileName),n.push("==================================================================="),n.push("--- "+e.oldFileName+(void 0===e.oldHeader?"":"\t"+e.oldHeader)),n.push("+++ "+e.newFileName+(void 0===e.newHeader?"":"\t"+e.newHeader));for(let t=0;t<e.hunks.length;t++){const o=e.hunks[t];0===o.oldLines&&(o.oldStart-=1),0===o.newLines&&(o.newStart-=1),n.push("@@ -"+o.oldStart+","+o.oldLines+" +"+o.newStart+","+o.newLines+" @@");for(const e of o.lines)n.push(e)}return n.join("\n")+"\n"}function N(e,n,t,o,s,r,i){if("function"==typeof i&&(i={callback:i}),!(null==i?void 0:i.callback)){const l=T(e,n,t,o,s,r,i);if(!l)return;return F(l)}{const{callback:l}=i;T(e,n,t,o,s,r,Object.assign(Object.assign({},i),{callback:e=>{l(e?F(e):void 0)}}))}}function A(e){const n=e.endsWith("\n"),t=e.split("\n").map((e=>e+"\n"));return n?t.pop():t.push(t.pop().slice(0,-1)),t}function D(e){let n=e;return n=n.replace(/&/g,"&amp;"),n=n.replace(/</g,"&lt;"),n=n.replace(/>/g,"&gt;"),n=n.replace(/"/g,"&quot;"),n}e.Diff=n,e.applyPatch=E,e.applyPatches=function(e,n){const t="string"==typeof e?x(e):e;let o=0;!function e(){const s=t[o++];if(!s)return n.complete();n.loadFile(s,(function(t,o){if(t)return n.complete(t);const r=E(o,s,n);n.patched(s,r,(function(t){if(t)return n.complete(t);e()}))}))}()},e.arrayDiff=j,e.canonicalize=P,e.characterDiff=t,e.convertChangesToDMP=function(e){const n=[];let t,o;for(let s=0;s<e.length;s++)t=e[s],o=t.added?1:t.removed?-1:0,n.push([o,t.value]);return n},e.convertChangesToXML=function(e){const n=[];for(let t=0;t<e.length;t++){const o=e[t];o.added?n.push("<ins>"):o.removed&&n.push("<del>"),n.push(D(o.value)),o.added?n.push("</ins>"):o.removed&&n.push("</del>")}return n.join("")},e.createPatch=function(e,n,t,o,s,r){return N(e,e,n,t,o,s,r)},e.createTwoFilesPatch=N,e.cssDiff=L,e.diffArrays=function(e,n,t){return j.diff(e,n,t)},e.diffChars=function(e,n,o){return t.diff(e,n,o)},e.diffCss=function(e,n,t){return L.diff(e,n,t)},e.diffJson=function(e,n,t){return C.diff(e,n,t)},e.diffLines=y,e.diffSentences=function(e,n,t){return b.diff(e,n,t)},e.diffTrimmedLines=function(e,n,t){return t=function(e,n){if("function"==typeof e)n.callback=e;else if(e)for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n}(t,{ignoreWhitespace:!0}),w.diff(e,n,t)},e.diffWords=function(e,n,t){return null==(null==t?void 0:t.ignoreWhitespace)||t.ignoreWhitespace?p.diff(e,n,t):v(e,n,t)},e.diffWordsWithSpace=v,e.formatPatch=F,e.jsonDiff=C,e.lineDiff=w,e.parsePatch=x,e.reversePatch=function e(n){return Array.isArray(n)?n.map((n=>e(n))).reverse():Object.assign(Object.assign({},n),{oldFileName:n.newFileName,oldHeader:n.newHeader,newFileName:n.oldFileName,newHeader:n.oldHeader,hunks:n.hunks.map((e=>({oldLines:e.newLines,oldStart:e.newStart,newLines:e.oldLines,newStart:e.oldStart,lines:e.lines.map((e=>e.startsWith("-")?`+${e.slice(1)}`:e.startsWith("+")?`-${e.slice(1)}`:e))})))})},e.sentenceDiff=b,e.structuredPatch=T,e.wordDiff=p,e.wordsWithSpaceDiff=m}));